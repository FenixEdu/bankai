<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.fenixedu</groupId>
		<artifactId>web-library-project</artifactId>
		<version>1.3.0</version>
		<relativePath></relativePath>
	</parent>

	<artifactId>bankai</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Bankai</name>

	<properties>
	
		<bankai.skip.js.optimization>false</bankai.skip.js.optimization>
		
		<!-- this is the source dir relative to r.js.tmp.dir (used in build.js) -->
		<r.js.app.dir>${project.artifactId}</r.js.app.dir>
		
		<!-- tmp dir for optimization (where the optimizer will run) -->
		<r.js.tmp.dir>${project.build.directory}/minifier</r.js.tmp.dir>
		
		<!-- optimized app destination (used in build.js) -->
		<r.js.dir>${r.js.tmp.dir}/minified/${project.artifactId}</r.js.dir>
		
		<!-- where to copy app after optimize so it is included within the jar -->
		<r.js.final.dir>${project.build.outputDirectory}/META-INF/resources/${project.artifactId}</r.js.final.dir>
		 
		 <bankai.build.js.dir>${basedir}/src/main/resources/bankai/</bankai.build.js.dir>
		 
		 <build.js.dir>${basedir}/src/main/resources/</build.js.dir>
		 
	</properties>

	<build>
		<resources>
		
			<!-- 1. copy src resources to tmp dir -->
			<resource> 
				<directory>src/main/webapp</directory>
				<targetPath>${r.js.tmp.dir}</targetPath>
				<filtering>false</filtering>
			</resource>
			
			<!-- 2. copy and filter build.js to optimization dir -->
			<resource>
				<directory>${bankai.build.js.dir}</directory>
				<targetPath>${r.js.tmp.dir}</targetPath>
				<filtering>true</filtering>
				<includes>
					<include>build.js</include>
				</includes>
			</resource>
			
			<resource>
				<directory>${build.js.dir}</directory>
				<targetPath>${project.build.outputDirectory}</targetPath>
				<filtering>false</filtering>
				<includes>
					<include>build.js</include>
				</includes>
			</resource>
			
		</resources>
		
		<plugins>
			<!-- 3. run optimizer -->
			<plugin>
				<groupId>com.github.mcheely</groupId>
				<artifactId>requirejs-maven-plugin</artifactId>
				<version>2.0.0</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>optimize</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<configFile>
						${r.js.tmp.dir}/build.js
					</configFile>
					<filterConfig>
						false
					</filterConfig>
					<skip>
						${bankai.skip.js.optimization}
					</skip>
				</configuration>
			</plugin>
			
			<!-- 4. before creating the jar copy to META-INF/resources excluding unnecessary files -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${r.js.final.dir}</outputDirectory>
							<resources>
								<resource>
									<directory>${r.js.dir}</directory>
									<filtering>false</filtering>
									<excludes>
										<exclude>build.txt</exclude>
										<exclude>templates/**</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>raw</id>
			<properties>
				<bankai.skip.js.optimization>true</bankai.skip.js.optimization>
			</properties>
			<build>
				<resources>
					<resource> 
						<directory>src/main/webapp</directory>
						<targetPath>${project.build.outputDirectory}/META-INF/resources</targetPath>
						<filtering>false</filtering>
					</resource>
				</resources>
			</build>
		</profile>
	</profiles>

	<repositories>
        <repository>
            <id>fenix-ashes-maven-repository</id>
            <url>https://fenix-ashes.ist.utl.pt/nexus/content/groups/fenix-ashes-maven-repository</url>
        </repository>
    </repositories>

</project>
